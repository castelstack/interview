{"ast":null,"code":"var _jsxFileName = \"/home/castel/Desktop/talk/src/containers/talkContainers/create.jsx\";\nimport React from \"react\";\nimport { Input, descriptionInput, TextArea } from \"../../components/common/input\";\nimport { Heading } from \"../../constant/styles/text\";\nimport { Button } from \"../../components/common/button/btn\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateTalk = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `w-auto flex place-content-center items-center`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 gap-4 items-center py-12 sm:px-8 px-3 rounded bg-gray-100 shadow-white  dark:shadow-new-3 dark:bg-dark-800  w-full\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        className: \"justify-self-center text-center\",\n        children: \"Create Talk\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          subject: \"\",\n          description: \"\"\n        },\n        validationSchema: Yup.object({\n          subject: Yup.string().required(\"Input subject\"),\n          description: Yup.string().required(\"Input description\")\n        }),\n        children: formik => /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"grid  grid-cols-1 justify-center gap-2  \",\n          onSubmit: formik.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            id: \"subject\",\n            type: \"subject\",\n            label: \"subject\",\n            placeholder: \"subject\",\n            ...formik.getFieldProps(\"subject\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), formik.touched.subject && formik.errors.subject ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-red-500\",\n            children: formik.errors.subject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(TextArea, {\n            id: \"description\",\n            type: \"description\",\n            label: \"description\",\n            placeholder: \"description\",\n            ...formik.getFieldProps(\"description\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), formik.touched.description && formik.errors.description ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-red-500\",\n            children: formik.errors.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n            className: \"mt-8 justify-self-center\",\n            type: \"submit\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CreateTalk;\nexport default CreateTalk;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTalk\");","map":{"version":3,"sources":["/home/castel/Desktop/talk/src/containers/talkContainers/create.jsx"],"names":["React","Input","descriptionInput","TextArea","Heading","Button","Formik","Yup","CreateTalk","subject","description","object","string","required","formik","handleSubmit","getFieldProps","touched","errors"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KADF,EAEEC,gBAFF,EAGEC,QAHF,QAIO,+BAJP;AAKA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,MAAT,QAAuB,oCAAvB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,sBACE;AAAK,IAAA,SAAS,EAAG,+CAAjB;AAAA,2BACE;AACE,MAAA,SAAS,EAAC,qIADZ;AAAA,8BAKE,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC,iCAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eASE,QAAC,MAAD;AACE,QAAA,aAAa,EAAE;AAAEC,UAAAA,OAAO,EAAE,EAAX;AAAeC,UAAAA,WAAW,EAAE;AAA5B,SADjB;AAEE,QAAA,gBAAgB,EAAEH,GAAG,CAACI,MAAJ,CAAW;AAC3BF,UAAAA,OAAO,EAAEF,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,eAAtB,CADkB;AAE3BH,UAAAA,WAAW,EAAEH,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB;AAFc,SAAX,CAFpB;AAAA,kBAOIC,MAAD,iBACC;AACE,UAAA,SAAS,EAAC,0CADZ;AAEE,UAAA,QAAQ,EAAEA,MAAM,CAACC,YAFnB;AAAA,kCAIE,QAAC,KAAD;AACE,YAAA,EAAE,EAAC,SADL;AAEE,YAAA,IAAI,EAAC,SAFP;AAGE,YAAA,KAAK,EAAC,SAHR;AAIE,YAAA,WAAW,EAAC,SAJd;AAAA,eAKMD,MAAM,CAACE,aAAP,CAAqB,SAArB;AALN;AAAA;AAAA;AAAA;AAAA,kBAJF,EAWGF,MAAM,CAACG,OAAP,CAAeR,OAAf,IAA0BK,MAAM,CAACI,MAAP,CAAcT,OAAxC,gBACC;AAAG,YAAA,SAAS,EAAC,sBAAb;AAAA,sBAAqCK,MAAM,CAACI,MAAP,CAAcT;AAAnD;AAAA;AAAA;AAAA;AAAA,kBADD,GAEG,IAbN,eAcE,QAAC,QAAD;AACE,YAAA,EAAE,EAAC,aADL;AAEE,YAAA,IAAI,EAAC,aAFP;AAGE,YAAA,KAAK,EAAC,aAHR;AAIE,YAAA,WAAW,EAAC,aAJd;AAAA,eAKMK,MAAM,CAACE,aAAP,CAAqB,aAArB;AALN;AAAA;AAAA;AAAA;AAAA,kBAdF,EAqBGF,MAAM,CAACG,OAAP,CAAeP,WAAf,IAA8BI,MAAM,CAACI,MAAP,CAAcR,WAA5C,gBACC;AAAG,YAAA,SAAS,EAAC,sBAAb;AAAA,sBACGI,MAAM,CAACI,MAAP,CAAcR;AADjB;AAAA;AAAA;AAAA;AAAA,kBADD,GAIG,IAzBN,eA4BE,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAC,0BAAlB;AAA6C,YAAA,IAAI,EAAC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA5BF;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwDD,CAzDD;;KAAMF,U;AA2DN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport {\n  Input,\n  descriptionInput,\n  TextArea,\n} from \"../../components/common/input\";\nimport { Heading } from \"../../constant/styles/text\";\nimport { Button } from \"../../components/common/button/btn\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst CreateTalk = () => {\n  return (\n    <div className={`w-auto flex place-content-center items-center`}>\n      <div\n        className='grid grid-cols-1 gap-4 items-center py-12 sm:px-8 px-3 rounded\n                            bg-gray-100 shadow-white  dark:shadow-new-3\n                            dark:bg-dark-800  w-full'\n      >\n        <Heading className='justify-self-center text-center'>\n          Create Talk\n        </Heading>\n\n        <Formik\n          initialValues={{ subject: \"\", description: \"\" }}\n          validationSchema={Yup.object({\n            subject: Yup.string().required(\"Input subject\"),\n            description: Yup.string().required(\"Input description\"),\n          })}\n        >\n          {(formik) => (\n            <form\n              className='grid  grid-cols-1 justify-center gap-2  '\n              onSubmit={formik.handleSubmit}\n            >\n              <Input\n                id='subject'\n                type='subject'\n                label='subject'\n                placeholder='subject'\n                {...formik.getFieldProps(\"subject\")}\n              />\n              {formik.touched.subject && formik.errors.subject ? (\n                <p className='text-xs text-red-500'>{formik.errors.subject}</p>\n              ) : null}\n              <TextArea\n                id='description'\n                type='description'\n                label='description'\n                placeholder='description'\n                {...formik.getFieldProps(\"description\")}\n              />\n              {formik.touched.description && formik.errors.description ? (\n                <p className='text-xs text-red-500'>\n                  {formik.errors.description}\n                </p>\n              ) : null}\n\n              {/* submit */}\n              <Button className='mt-8 justify-self-center' type='submit'>\n                Create\n              </Button>\n            </form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateTalk;\n"]},"metadata":{},"sourceType":"module"}