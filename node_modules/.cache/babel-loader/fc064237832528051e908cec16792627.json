{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nconst DarkMode = () => {\n  _s();\n\n  const [darkMode, setDarkMode] = useState(localStorage.theme);\n  const [dark, setDark] = useState(false);\n  const colorTheme = darkMode === \"dark\" ? \"light\" : \"dark\";\n  useEffect(() => {\n    const html = window.document.documentElement;\n    html.classList.remove(colorTheme);\n    html.classList.add(darkMode);\n    localStorage.setItem(\"dark\", darkMode);\n    html.classList.contains(\"dark\") ? setDark(true) : setDark(false);\n  }, [colorTheme, darkMode, dark]);\n  return [colorTheme, setDarkMode, dark];\n};\n\n_s(DarkMode, \"zY4w3LmmEJ0iq2a660Y4cskF0gg=\");\n\n_c = DarkMode;\nexport default DarkMode;\n\nvar _c;\n\n$RefreshReg$(_c, \"DarkMode\");","map":{"version":3,"sources":["/home/castel/Desktop/talk/src/constant/dark.js"],"names":["useEffect","useState","DarkMode","darkMode","setDarkMode","localStorage","theme","dark","setDark","colorTheme","html","window","document","documentElement","classList","remove","add","setItem","contains"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAACI,YAAY,CAACC,KAAd,CAAxC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMQ,UAAU,GAAGN,QAAQ,KAAK,MAAb,GAAsB,OAAtB,GAAgC,MAAnD;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,IAAI,GAAGC,MAAM,CAACC,QAAP,CAAgBC,eAA7B;AAEAH,IAAAA,IAAI,CAACI,SAAL,CAAeC,MAAf,CAAsBN,UAAtB;AACAC,IAAAA,IAAI,CAACI,SAAL,CAAeE,GAAf,CAAmBb,QAAnB;AACAE,IAAAA,YAAY,CAACY,OAAb,CAAqB,MAArB,EAA6Bd,QAA7B;AAEAO,IAAAA,IAAI,CAACI,SAAL,CAAeI,QAAf,CAAwB,MAAxB,IAAkCV,OAAO,CAAC,IAAD,CAAzC,GAAkDA,OAAO,CAAC,KAAD,CAAzD;AACD,GARQ,EAQN,CAACC,UAAD,EAAaN,QAAb,EAAuBI,IAAvB,CARM,CAAT;AAUA,SAAO,CAACE,UAAD,EAAaL,WAAb,EAA0BG,IAA1B,CAAP;AACD,CAhBD;;GAAML,Q;;KAAAA,Q;AAkBN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst DarkMode = () => {\n  const [darkMode, setDarkMode] = useState(localStorage.theme);\n  const [dark, setDark] = useState(false);\n  const colorTheme = darkMode === \"dark\" ? \"light\" : \"dark\";\n\n  useEffect(() => {\n    const html = window.document.documentElement;\n\n    html.classList.remove(colorTheme);\n    html.classList.add(darkMode);\n    localStorage.setItem(\"dark\", darkMode);\n\n    html.classList.contains(\"dark\") ? setDark(true) : setDark(false);\n  }, [colorTheme, darkMode, dark]);\n\n  return [colorTheme, setDarkMode, dark];\n};\n\nexport default DarkMode;\n"]},"metadata":{},"sourceType":"module"}